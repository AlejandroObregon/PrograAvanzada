@model Pedidos.Abstracciones.ModelosParaUI.ProductoDto

@{
    ViewBag.Title = "Crear Nuevo Artículo de Producto";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">

            <h2 class="mb-4">@ViewBag.Title</h2>

            @using (Html.BeginForm("CrearProducto", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="p-4 border rounded shadow-sm bg-light">

                    <h4 class="mb-3">Datos del Repuesto</h4>
                    <hr />

                    @Html.ValidationSummary(true, "Por favor, corrige los siguientes errores:", new { @class = "alert alert-danger" })


                    <div class="mb-3">
                        @Html.LabelFor(model => model.Nombre, new { @class = "form-label" })
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.CategoriaId, new { @class = "form-label" })
                        @Html.EditorFor(model => model.CategoriaId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Precio, new { @class = "form-label" })
                        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.ImpuestoPorc, new { @class = "form-label" })
                        @Html.EditorFor(model => model.ImpuestoPorc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImpuestoPorc, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Stock, new { @class = "form-label" })
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    </div>


                    <div class="mb-3">
                        <label class="form-label d-block">Vista previa</label>
                        <img id="previewImg" src="@Url.Content("~/Content/Images/placeholder.svg")" alt="Vista previa" style="max-width: 240px; height: auto; border:1px solid #ddd; padding:4px; border-radius:4px;" />
                    </div>

                    <div class="mb-3">
                        <label for="archivo" class="form-label">Selecciona la imagen del producto:</label>
                        <input type="file" id="archivo" name="archivo" class="form-control" accept="image/*" required />
                    </div>

                    <div class="d-grid gap-2 mt-4">
                        <input type="submit" value="Crear Producto" class="btn btn-primary btn-lg" />
                    </div>
                </div>
            }

            <div class="mt-3">
                @Html.ActionLink("Volver a la Lista", "ListarProducto", null, new { @class = "btn btn-secondary btn-sm" })
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        (function () {
            var input = document.getElementById('archivo');
            var img = document.getElementById('previewImg');
            if (input && img) {
                input.addEventListener('change', function (evt) {
                    const file = evt.target.files && evt.target.files[0];
                    if (!file) return;
                    const reader = new FileReader();
                    reader.onload = function (e) { img.src = e.target.result; };
                    reader.readAsDataURL(file);
                });
            }
        })();
    </script>
}
